table=0, priority=50, dl_type=0x0800, nw_proto=6, tp_dst=80 actions=output:2
table=0, priority=50, dl_type=0x0800, nw_proto=6, tp_src=80, actions=output:wlan0




# Encaminhar pacotes de 192.168.1.10 para 192.168.2.10 através da porta 1
ovs-ofctl add-flow s1 priority=100,in_port=2,dl_type=0x0800,nw_src=192.168.1.10,nw_dst=192.168.11.11,action=output:5

# Encaminhar pacotes de 192.168.2.10 para 192.168.1.10 através da porta Wlan0
ovs-ofctl add-flow s1 priority=100,in_port=5,dl_type=0x0800,nw_src=192.168.11.11,nw_dst=192.168.1.10,action=output:wlan0



# Encaminhar pacotes de 192.168.1.10 para 192.168.11.11 através da porta 1
ovs-ofctl add-flow ap1 priority=100,in_port=1,dl_type=0x0800,nw_src=192.168.1.10,nw_dst=192.168.11.11,action=output:mov-wlan0


# Encaminhar pacotes de 192.168.2.10 para 192.168.1.10 através da porta Wlan0
ovs-ofctl add-flow ap1 priority=100,in_port=2,dl_type=0x0800,nw_src=192.168.11.11,nw_dst=192.168.1.10,action=output:mov-wlan0




sudo ovs-ofctl -O OpenFlow13 add-flow ap1 in_port=139,dl_src=00:00:00:00:00:06,dl_dst=00:00:00:00:00:01,ip,nw_src=192.168.11.11,nw_dst=192.168.1.10,action=output:1
sudo ovs-ofctl -O OpenFlow13 add-flow ap1 priority=1,in_port=1,dl_type=0x0800,nw_src=192.168.1.10,nw_dst=192.168.11.11,action=output:139
sudo ovs-ofctl -O OpenFlow13 add-flow ap1 priority=1,in_port=139,dl_type=0x0800,nw_src=192.168.11.11,nw_dst=192.168.1.10,action=output:1


ovs-ofctl add-flow <bridge> in_port=wlan0,dl_src=<mac_address_of_device>,dl_dst=<mac_address_of_destination>,ip,nw_src=<source_ip>,nw_dst=<destination_ip>,action=output:<port_number>
Lembre-se de substituir <bridge> pelo nome da ponte que você está usando, 
<mac_address_of_device> pelo endereço MAC do dispositivo de origem, 
<mac_address_of_destination> pelo endereço MAC do dispositivo de destino, 
<source_ip> pelo endereço IP de origem e <destination_ip> pelo endereço IP de destino e 
<port_number> pelo número da porta para onde você deseja enviar o pacote na direção do fluxo reverso.



--sout "#std{access=file,mux=mp4,dst=output.mp4}"

or for both destinations (display and file)

--sout "#duplicate{dst=display,dst=std{access=file,mux=mp4,dst=output.mp4}}"


